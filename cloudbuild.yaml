# Clone the git repo.
steps:
# This step builds the container image.
# [START cloudbuild]
# This step runs the unit tests on the app
# - name: 'python:3.7-slim'
#   id: Test
#   entrypoint: /bin/sh
#   args:
#   - -c
#   - 'pip install flask && python test_app.py -v'
# This step builds the container image.
- name: 'gcr.io/cloud-builders/docker'
  id: Build
  args:
  - 'build'
  - '-t'
  - 'gcr.io/anthos-sandbox-275220/my-repository/hello-cloudbuild:$SHORT_SHA'
  - '.'

# This step pushes the image to Container Registry
# The PROJECT_ID and SHORT_SHA variables are automatically
# replaced by Cloud Build.
- name: 'gcr.io/cloud-builders/docker'
  id: Push
  args:
  - 'push'
  - 'gcr.io/anthos-sandbox-275220/my-repository/hello-cloudbuild:$SHORT_SHA'
  #
# This step generates the new manifest
- name: 'gcr.io/cloud-builders/git'
  id: Generate manifest
  entrypoint: /bin/sh
  args:
  - '-c'
  - |
     export PUSHAC=$(gcloud secrets versions access latest --secret=repopush)
     echo $PUSHAC
     set -x
     git config --global user.name "mandarsdroid" && \
     git config --global user.email "mandarsdroid@gmail.com" && \
     git branch
     sed "s/GOOGLE_CLOUD_PROJECT/anthos-sandbox-275220/g" kubernetes.yaml.tpl | \
     sed "s/COMMIT_SHA/${SHORT_SHA}/g" > manifests/dev/kubernetes.yaml
     cat manifests/dev/kubernetes.yaml
     git fetch origin main && git checkout main  && \
     git add . && \
     git commit -m "Manifest from commit $COMMIT_SHA && \
     $(git log --format=%B -n 1 $COMMIT_SHA)" 
     git config user.name
     git push https://mandarsdroid:$PUSHAC@github.com/mandarsdroid/boa-sample.git
# [END cloudbuild-delivery]

