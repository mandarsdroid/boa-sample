# Clone the git repo.
steps:
- name: 'gcr.io/cloud-builders/git'
  id: 'Clone'
  args: ['clone', 'https://github.com/mayurkasliwal/gke-ci-cd-demo.git']

# This step builds the container image.
# [START cloudbuild]
# This step runs the unit tests on the app
# - name: 'python:3.7-slim'
#   id: Test
#   entrypoint: /bin/sh
#   args:
#   - -c
#   - 'pip install flask && python test_app.py -v'
# This step builds the container image.
- name: 'gcr.io/cloud-builders/docker'
  id: Build
  args:
  - 'build'
  - '-t'
  - 'gcr.io/anthos-sandbox-275220/my-repository/hello-cloudbuild:$SHORT_SHA'
  - '.'

# This step pushes the image to Container Registry
# The PROJECT_ID and SHORT_SHA variables are automatically
# replaced by Cloud Build.
- name: 'gcr.io/cloud-builders/docker'
  id: Push
  args:
  - 'push'
  - 'gcr.io/anthos-sandbox-275220/my-repository/hello-cloudbuild:$SHORT_SHA'
  #
# This step generates the new manifest
- name: 'gcr.io/cloud-builders/git'
  id: Generate manifest
  entrypoint: /bin/sh
  args:
  - '-c'
  - |
     set -x
     sed "s/GOOGLE_CLOUD_PROJECT/anthos-sandbox-275220/g" kubernetes.yaml.tpl | \
     sed "s/COMMIT_SHA/${SHORT_SHA}/g" > manifests/dev/kubernetes.yaml
     cat manifests/dev/kubernetes.yaml
     git config --global user.name "mayurkasliwal" && \
     git config --global user.email "mayur7kasliwal@gmail.com" && \
     git fetch origin master && git checkout master  && \
     git add . && \
     git commit -m "Manifest from commit $COMMIT_SHA && \
     $(git log --format=%B -n 1 $COMMIT_SHA)" 
     git config user.name
     git push https://mayurkasliwal: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@github.com/mayurkasliwal/gke-ci-cd-demo.git
# [END cloudbuild-delivery]

